<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hei Tony Ko | Personal Portfolio</title>
    <link>http://htko.ca/index.xml</link>
    <description>Recent content on Hei Tony Ko | Personal Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright - Tony Ko.</copyright>
    <lastBuildDate>Thu, 19 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://htko.ca/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Site Base</title>
      <link>http://htko.ca/project/code/htko/site-base/README/</link>
      <pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/htko/site-base/README/</guid>
      <description>

&lt;h1 id=&#34;personal-project&#34;&gt;Personal Project&lt;/h1&gt;

&lt;p&gt;Hugo base for personal portfolio at htko.ca. An experiment in static site generation, using &lt;a href=&#34;http://gohugo.io/&#34;&gt;&lt;strong&gt;Hugo&lt;/strong&gt;&lt;/a&gt; as the engine. Dynamic sites are heavy in resource usage are vulnerable to attacks. Static sites are fast, efficient and most of all, provide minimal avenues of attack. However, they are difficult to maintain, and do not scale well with large sets of data.&lt;/p&gt;

&lt;p&gt;I have selected &lt;a href=&#34;http://bulma.io/&#34;&gt;&lt;strong&gt;Bulma&lt;/strong&gt;&lt;/a&gt; as my css framework of choice as it is CSS only, unopinionated, fast &lt;strong&gt;(&amp;lt;200KB!)&lt;/strong&gt;, yet supports all modern flexbox grid conventions. I also created a mini CSS framework of my own, to supplement Bulma. My build process builds the css, pulls from my local portfolio directory the needed projects, then builds it with hugo, and renders it with &lt;strong&gt;BrowserSync&lt;/strong&gt;. I deploy using &lt;strong&gt;Git&lt;/strong&gt; on &lt;strong&gt;DigitalOcean&lt;/strong&gt; because it does delta updates, which is especially important when dealing with hugo&amp;rsquo;s large output.&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gulp&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt; task engine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js-yaml&lt;/code&gt;, &lt;code&gt;gray-matter&lt;/code&gt; for front matter / build configuration processing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp-sass&lt;/code&gt;,&lt;code&gt;gulp-postcss&lt;/code&gt;,&lt;code&gt;autoprefixer&lt;/code&gt; to compile sass &amp;amp; scss files to css.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;globby&lt;/code&gt;,&lt;code&gt;minimatch&lt;/code&gt;,&lt;code&gt;fs-extra&lt;/code&gt; for portfolio projects compilation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js-beautify&lt;/code&gt; for linting.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo&lt;/code&gt;, &lt;code&gt;browser-sync&lt;/code&gt; for building and rendering.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Profile Api</title>
      <link>http://htko.ca/project/code/fcc/profile-api/README/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/profile-api/README/</guid>
      <description>

&lt;h1 id=&#34;personal-project&#34;&gt;Personal Project&lt;/h1&gt;

&lt;p&gt;JSON(P) API for FreeCodeCamp profile and curriculum map. Built with Node, Express, Cheerio, and Request&lt;/p&gt;

&lt;h1 id=&#34;example&#34;&gt;Example&lt;/h1&gt;

&lt;p&gt;An example of this API in use is on the &lt;a href=&#34;http://htko.ca/project/code/fcc/free-code-camp/README/&#34;&gt;FreeCodeCamp&lt;/a&gt; project page.&lt;/p&gt;

&lt;h2 id=&#34;server-install&#34;&gt;Server Install:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Do the following in a system with node &amp;amp; npm v6.9.4 :
&lt;code&gt;
git clone https://github.com/htko89/fcc-profile-api.git
cd fcc-profile-api/release
npm install
node server.js
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;server-usage&#34;&gt;Server Usage:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Your installed api server is available at: &lt;a href=&#34;http://localhost:80/fcc&#34;&gt;http://localhost:80/fcc&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JSONP url&lt;/strong&gt;, example: &lt;a href=&#34;http://localhost:80/fcc?user=your_username&amp;amp;callback=test&#34;&gt;http://localhost:80/fcc?user=your_username&amp;amp;callback=test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON url&lt;/strong&gt;, example: &lt;a href=&#34;http://localhost:80/fcc?user=your_username&#34;&gt;http://localhost:80/fcc?user=your_username&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;User and callback arguments are optional, example: &lt;a href=&#34;http://localhost:80/&#34;&gt;http://localhost:80/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I also host a server for public use &lt;strong&gt;(be fair!)&lt;/strong&gt; at: &lt;a href=&#34;http://api.htko.ca/fcc&#34;&gt;http://api.htko.ca/fcc&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JSONP url&lt;/strong&gt;, example: &lt;a href=&#34;http://api.htko.ca/fcc?user=your_username&amp;amp;callback=&#34;&gt;http://api.htko.ca/fcc?user=your_username&amp;amp;callback=&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON url&lt;/strong&gt;, example: &lt;a href=&#34;http://api.htko.ca/fcc?user=your_username&#34;&gt;http://api.htko.ca/fcc?user=your_username&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;User and callback arguments are optional, example: &lt;a href=&#34;http://api.htko.ca/fcc&#34;&gt;http://api.htko.ca/fcc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data-structure&#34;&gt;Data Structure:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HINT&lt;/strong&gt;: Don&amp;rsquo;t specify a username to see how the curriculum map is organized. (use a linter)&lt;/li&gt;
&lt;li&gt;Data returned are nested objects: Certification &amp;gt; Chapter &amp;gt; Challenge.&lt;/li&gt;
&lt;li&gt;Older challenges that have been removed from the FreeCodeCamp curriculum is under &lt;code&gt;Deprecated&lt;/code&gt; key.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;example-shortened-output-http-code-200&#34;&gt;Example shortened output (HTTP code 200).&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;Front End Development Certification&amp;quot;: {
    &amp;quot;HTML5 and CSS&amp;quot;: {
      &amp;quot;_time&amp;quot;: &amp;quot;1969-12-31T10:00:00.000Z&amp;quot;,
      &amp;quot;Inform with the Paragraph Element&amp;quot; : {
        &amp;quot;_link&amp;quot; : &amp;quot;https://www.freecodecamp.com/challenges/inform-with-the-paragraph-element&amp;quot;,
        &amp;quot;_dateC&amp;quot; : &amp;quot;May 21, 2016&amp;quot;,
        &amp;quot;_dateU&amp;quot; : &amp;quot;May 22, 2016&amp;quot;,
        &amp;quot;_code&amp;quot; : &amp;quot;https://www.freecodecamp.com//challenges/Inform with the Paragraph Element?solution=%0A%3Ch1%3EHello%20World%3C%2Fh1%3E%0A%3Ch2%3ECatPhotoApp%3C%2Fh2%3E%0A%3Cp%3EHello%20Paragraph%3C%2Fp%3E%0A&amp;quot;
      }
    }
  },
  &amp;quot;Data Visualization Certification&amp;quot;: {
		&amp;quot;Sass&amp;quot;: {
			&amp;quot;_time&amp;quot;: &amp;quot;1969-12-31T10:00:00.000Z&amp;quot;,
			&amp;quot;Learn Sass Challenges&amp;quot;: {
				&amp;quot;_status&amp;quot;: &amp;quot;Coming Soon&amp;quot;
			}
		}
  },
  &amp;quot;Coding Interview Preparation&amp;quot;: {
		&amp;quot;Coding Interview Training&amp;quot;: {
			&amp;quot;_time&amp;quot;: &amp;quot;1970-01-03T03:00:00.000Z&amp;quot;,
			&amp;quot;_desc&amp;quot;: &amp;quot;To qualify for this coding interview training, you must first earn all four certifications: Front End, Data Visualization, Back End, and Full Stack&amp;quot;,
			&amp;quot;Soft Skill Training&amp;quot;: {},
			&amp;quot;Critical Thinking Training&amp;quot;: {},
			&amp;quot;Whiteboard Coding Training&amp;quot;: {}
		}
  },
  &amp;quot;Deprecated&amp;quot;: {
  	&amp;quot;Add Alt Text to an Image for Accessibility&amp;quot;: {
  		&amp;quot;_dateC&amp;quot;: &amp;quot;May 21, 2016&amp;quot;,
  		&amp;quot;_code&amp;quot;: &amp;quot;https://www.freecodecamp.com//challenges/Add Alt Text to an Image for Accessibility?solution=...&amp;quot;
  	}
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;example-error-output-http-code-500&#34;&gt;Example error output (HTTP code 500).&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;Errors&amp;quot;: {
    &amp;quot;_message&amp;quot;: &amp;quot;Cannot request freeCodeCamp map&amp;quot;,
    &amp;quot;_error&amp;quot;: {}
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://htko.ca/page/about-me/README/</link>
      <pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/page/about-me/README/</guid>
      <description>

&lt;h1 id=&#34;about-me&#34;&gt;About Me&lt;/h1&gt;

&lt;p&gt;I am &lt;strong&gt;Hei Tony Ko&lt;/strong&gt;, Front End Web Developer.&lt;/p&gt;

&lt;p&gt;I currently specialize in &lt;strong&gt;Front End: JS Frameworks, Node.JS, Responsive CSS and UI&lt;/strong&gt;, but I also often get my hands dirty with back end skills in &lt;strong&gt;Python, Wordpress and Node.JS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For almost a decade&lt;/strong&gt;, I have been fascinated with the idea of working with front-end technologies, magic and possibilities of HTML / CSS / Javascript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For the last year&lt;/strong&gt;, I have focused my efforts to fully develop this desire into a complete career.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Previous experience: &lt;strong&gt;Junior Designer (&lt;a href=&#34;http://kosinteriordesign.com/&#34;&gt;Ko&amp;rsquo;s Interior Design&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Current experience: &lt;strong&gt;Front End Development Certification (WIP) (&lt;a href=&#34;https://www.freecodecamp.com/&#34;&gt;Free Code Camp&lt;/a&gt;)&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;See current progress dynamically! &lt;a href=&#34;http://htko.ca/project/code/fcc/free-code-camp/README/&#34;&gt;FreeCodeCamp Journal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Career aim: &lt;strong&gt;Data Vis.&lt;/strong&gt;, &lt;strong&gt;Back End&lt;/strong&gt; and &lt;strong&gt;Full Stack Certificates&lt;/strong&gt; in the future.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a whole, I hope to bring a unique &lt;strong&gt;developer-designer&lt;/strong&gt; perspective to my work.&lt;/p&gt;

&lt;h1 id=&#34;contact&#34;&gt;Contact&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;C: +1-647-300-9787&lt;/li&gt;
&lt;li&gt;E: tony@htko.ca&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTKO Identity</title>
      <link>http://htko.ca/project/gfx/personal/htko-identity/README/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/gfx/personal/htko-identity/README/</guid>
      <description>

&lt;h1 id=&#34;personal-project&#34;&gt;Personal Project&lt;/h1&gt;

&lt;p&gt;Identity design for personal portfolio.&lt;/p&gt;

&lt;h2 id=&#34;logo-specifications&#34;&gt;Logo Specifications:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Type: Modified from &lt;a href=&#34;http://www.emmeranrichard.fr/portfolio/blanka-font/&#34;&gt;BLANKA&lt;/a&gt; - &lt;a href=&#34;http://www.emmeranrichard.fr/&#34;&gt;Emmeran Richard&lt;/a&gt; (royalty free).&lt;/li&gt;
&lt;li&gt;Inspiration: &lt;a href=&#34;http://www.masterdynamic.eu/&#34;&gt;Master &amp;amp; Dynamic&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Theme: Strong, Typographic, Geometric.&lt;/li&gt;
&lt;li&gt;Reflect letters &lt;code&gt;H&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;K&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Artboard: &lt;code&gt;600px*600px&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Canvas: &lt;code&gt;400px*400px&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Print media ready.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;card-specification&#34;&gt;Card Specification&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Photo: Toronto, Canada - &lt;a href=&#34;https://unsplash.com/@yourturn?photo=86xXPfp48ec&#34;&gt;Illia Cherednychenko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Prominent logo display&lt;/li&gt;
&lt;li&gt;Strong use of grids&lt;/li&gt;
&lt;li&gt;Artboards: &lt;code&gt;3.3in*2.16in&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Theme Foundation6 Blog</title>
      <link>http://htko.ca/project/code/personal/hugo-theme-foundation6-blog/README/</link>
      <pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/personal/hugo-theme-foundation6-blog/README/</guid>
      <description>&lt;h1 id=&#34;personal-project&#34;&gt;Personal Project&lt;/h1&gt;

&lt;p&gt;A simple &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; theme based on the &lt;a href=&#34;http://foundation.zurb.com/templates-previews-sites-f6/blog.html&#34;&gt;Foundation 6 blog (w/ sidebar) example&lt;/a&gt;, with scss &amp;amp; js gulp build scripts.&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Responsive design.&lt;/li&gt;
&lt;li&gt;Basic &lt;a href=&#34;http://ogp.me&#34;&gt;OpenGraph&lt;/a&gt; and &lt;a href=&#34;https://dev.twitter.com/cards/types&#34;&gt;Twitter Card&lt;/a&gt; metadata support.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;robots.txt&lt;/code&gt; linking to XML sitemap (disabled by default, see &lt;a href=&#34;https://gohugo.io/extras/robots-txt/&#34;&gt;Hugo docs&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Basic support for &lt;a href=&#34;https://github.com/spf13/hugo/blob/master/docs/content/content/multilingual.md&#34;&gt;multi-lingual content&lt;/a&gt; (added in Hugo 0.17).&lt;/li&gt;
&lt;li&gt;Supports Google, Bing, and Yandex site verification via meta tags.&lt;/li&gt;
&lt;li&gt;Supports Google Analytics (async version), see &lt;a href=&#34;https://gohugo.io/extras/analytics/&#34;&gt;Hugo docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Supports Disqus comments, see &lt;a href=&#34;https://gohugo.io/extras/comments/&#34;&gt;Hugo docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Can show a message about cookie usage to the user, see &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog/blob/master/exampleSite/config.toml&#34;&gt;&lt;code&gt;exampleSite/config.toml&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Allow addition of custom &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; code in site&amp;rsquo;s &lt;code&gt;layouts/partial/head-custom.html&lt;/code&gt; (see &lt;a href=&#34;https://github.com/alanorth/hugo-theme-bootstrap4-blog/pull/17&#34;&gt;#17&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage:&lt;/h2&gt;

&lt;p&gt;Clone the repository to your site&amp;rsquo;s &lt;code&gt;themes&lt;/code&gt; directory. Refer to &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog/blob/master/exampleSite/config.toml&#34;&gt;&lt;code&gt;exampleSite/config.toml&lt;/code&gt;&lt;/a&gt; for optional configuration values. A few suggestions to help you get a good looking site quickly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keep blog posts in the &lt;code&gt;content/post&lt;/code&gt; directory, for example: &lt;code&gt;content/post/my-first-post.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Keep static pages in the &lt;code&gt;content&lt;/code&gt; directory, for example: &lt;code&gt;content/about.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Keep media like images in the &lt;code&gt;static&lt;/code&gt; directory, for example: &lt;code&gt;static/2016/10/screenshot.png&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you want an image to be shown when you share a post on social media, specify at least one image in the post&amp;rsquo;s front matter, for example: &lt;code&gt;images: [&amp;quot;/2016/10/screenshot.png&amp;quot;]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;&lt;/code&gt; tag in posts to control how much of a post is shown on summary pages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;building-for-developers-optional&#34;&gt;Building, for developers: (Optional)&lt;/h2&gt;

&lt;p&gt;This theme uses gulp build scripts modified from &lt;a href=&#34;https://github.com/zurb/foundation-zurb-template/&#34;&gt;Foundation Zurb Template&lt;/a&gt;. OS must have &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;bower&lt;/code&gt; installed.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Command&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Install:&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Run from &lt;code&gt;/scripts&lt;/code&gt; directory to download all dependencies.&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Installs node dependencies.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;bower install&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Installs bower dependencies.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Build Tasks:&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Choose one to build from scss / js files in &lt;code&gt;/source&lt;/code&gt; to &lt;code&gt;/static&lt;/code&gt;.&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm run build:debug&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Build human readable &lt;code&gt;debug&lt;/code&gt; files.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm run build:prod&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Build minified, sourcemapped files.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm run build:css&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Builds &lt;code&gt;debug&lt;/code&gt; css only.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm run build:js&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Builds &lt;code&gt;debug&lt;/code&gt; js only.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Hugo Tasks:&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Theme must be installed in a working or fresh hugo installation.&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm run build:hugo&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Builds &lt;code&gt;debug&lt;/code&gt; css / js, deletes &lt;code&gt;/public&lt;/code&gt;, builds &lt;code&gt;/public&lt;/code&gt;, lint &lt;code&gt;/public&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;npm run server&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Builds &lt;code&gt;debug&lt;/code&gt; css / js, deletes &lt;code&gt;/public&lt;/code&gt;, runs hugo server, start css / js / lint watch task.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;contributing&#34;&gt;Contributing:&lt;/h2&gt;

&lt;p&gt;There are several ways to help with the development of the theme:
* &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog/issues/new&#34;&gt;Open an issue&lt;/a&gt; on GitHub if you have problems or feature requests.
* Alternatively, tackle one of the &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog/issues&#34;&gt;existing issues&lt;/a&gt; on the issue tracker.
* Fork &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog&#34;&gt;the repository&lt;/a&gt; on GitHub, add features on a &amp;ldquo;feature&amp;rdquo; branch like &lt;code&gt;update-bootstrap&lt;/code&gt;, and then send a &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog/compare&#34;&gt;pull request&lt;/a&gt; with your changes.&lt;/p&gt;

&lt;h2 id=&#34;attribution&#34;&gt;Attribution:&lt;/h2&gt;

&lt;h3 id=&#34;this-repository-is-maintained-by&#34;&gt;This repository is maintained by:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/htko89&#34;&gt;Tony Ko&lt;/a&gt; - &lt;a href=&#34;https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)&#34;&gt;GPL 3&lt;/a&gt; - &lt;a href=&#34;https://github.com/htko89/hugo-theme-foundation6-blog/blob/master/license.txt&#34;&gt;License file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;this-repository-was-originally-cloned-from&#34;&gt;This repository was originally cloned from:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alanorth/hugo-theme-bootstrap4-blog/&#34;&gt;Alan Orth - hugo-theme-bootstrap4-blog&lt;/a&gt; - &lt;a href=&#34;https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)&#34;&gt;GPL 3&lt;/a&gt; - &lt;a href=&#34;https://github.com/alanorth/hugo-theme-bootstrap4-blog/blob/master/LICENSE.txt&#34;&gt;License file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;this-repository-contains-the-code-of&#34;&gt;This repository contains the code of:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zurb/foundation-zurb-template/&#34;&gt;Foundation Zurb Template&lt;/a&gt; - &lt;a href=&#34;https://tldrlegal.com/license/mit-license&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LUA Language</title>
      <link>http://htko.ca/project/code/personal/lua-language/README/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/personal/lua-language/README/</guid>
      <description>

&lt;h1 id=&#34;journal&#34;&gt;Journal&lt;/h1&gt;

&lt;p&gt;A journal of my learning progress and solutions in the LUA language.&lt;/p&gt;

&lt;h2 id=&#34;self-learning&#34;&gt;Self Learning&lt;/h2&gt;

&lt;p&gt;I am currently using github&amp;rsquo;s version tracking as a way to track my progress through &lt;a href=&#34;http://www.lua.org/pil/contents.html&#34;&gt;Programming in Lua: First Edition&lt;/a&gt; as my guide to learning LUA. Version tracking allows me to show to myself and other the actual progress of my work including revisions to my code. I chose the first edition because it is constant, readily available, and most importantly, free for all to enjoy. I intend this repository to be a learning reference for myself and others.&lt;/p&gt;

&lt;h2 id=&#34;attribution&#34;&gt;Attribution&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Code samples examples are derived and/or paraphrased in my own language from &lt;a href=&#34;http://www.lua.org/pil/contents.html&#34;&gt;Programming in Lua: First Edition&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table Of Contents.&lt;/h2&gt;

&lt;p&gt;Course &lt;code&gt;Parts&lt;/code&gt; are organized as folders, with &lt;code&gt;Chapters&lt;/code&gt; in individual markdown &lt;code&gt;.md&lt;/code&gt; files within for easy reading.&lt;/p&gt;

&lt;h3 id=&#34;part-1-the-language&#34;&gt;Part 1 - The Language&lt;/h3&gt;

&lt;p&gt;&lt;details&gt;&lt;summary&gt;01 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/01%20-%20Getting%20Started.md&#34;&gt;Complete&lt;/a&gt; - Getting Started&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;1.1 - Chunks&lt;/li&gt;
  &lt;li&gt;1.2 - Global Variables&lt;/li&gt;
  &lt;li&gt;1.3 - Some Lexical Conventions&lt;/li&gt;
  &lt;li&gt;1.4 - The Stand-Alone Interpreter&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;02 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/02%20-%20Types%20and%20Values.md&#34;&gt;Complete&lt;/a&gt; - Types and Values&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;2.1 - Nil&lt;/li&gt;
  &lt;li&gt;2.2 - Booleans&lt;/li&gt;
  &lt;li&gt;2.3 - Numbers&lt;/li&gt;
  &lt;li&gt;2.4 - Strings&lt;/li&gt;
  &lt;li&gt;2.5 - Tables&lt;/li&gt;
  &lt;li&gt;2.6 - Functions&lt;/li&gt;
  &lt;li&gt;2.7 - Userdata and Threads&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;03 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/03%20-%20Expressions.md&#34;&gt;Complete&lt;/a&gt; - Expressions&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;3.1 - Arithmetic Operators&lt;/li&gt;
  &lt;li&gt;3.2 - Relational Operators&lt;/li&gt;
  &lt;li&gt;3.3 - Logical Operators&lt;/li&gt;
  &lt;li&gt;3.4 - Concatenation&lt;/li&gt;
  &lt;li&gt;3.5 - Precedence&lt;/li&gt;
  &lt;li&gt;3.6 - Table Constructors&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;04 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/04%20-%20Statements.md&#34;&gt;Complete&lt;/a&gt; - Statements&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;4.1 - Assignment&lt;/li&gt;
  &lt;li&gt;4.2 - Local Variables and Blocks&lt;/li&gt;
  &lt;li&gt;4.3 - Control Structures&lt;/li&gt;
  &lt;li&gt;4.3.1 - if then else&lt;/li&gt;
  &lt;li&gt;4.3.2 - while&lt;/li&gt;
  &lt;li&gt;4.3.3 - repeat&lt;/li&gt;
  &lt;li&gt;4.3.4 - Numeric for&lt;/li&gt;
  &lt;li&gt;4.3.5 - Generic for&lt;/li&gt;
  &lt;li&gt;4.4 - break and return&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;05 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/05%20-%20Functions.md&#34;&gt;Complete&lt;/a&gt; - Functions&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;5.1 - Multiple Results&lt;/li&gt;
  &lt;li&gt;5.2 - Variable Number of Arguments&lt;/li&gt;
  &lt;li&gt;5.3 - Named Arguments&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;06 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/06%20-%20More%20about%20Functions.md&#34;&gt;Complete&lt;/a&gt; - More about Functions&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;6.1 - Closures&lt;/li&gt;
  &lt;li&gt;6.2 - Non-Global Functions&lt;/li&gt;
  &lt;li&gt;6.3 - Proper Tail Calls&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;07 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/07%20-%20Iterators%20and%20the%20Generic%20For.md&#34;&gt;Complete&lt;/a&gt; - Iterators and the Generic &lt;code&gt;for&lt;/code&gt;&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;7.1 - Iterators and Closures&lt;/li&gt;
  &lt;li&gt;7.2 - The Semantics of the Generic for&lt;/li&gt;
  &lt;li&gt;7.3 - Stateless Iterators&lt;/li&gt;
  &lt;li&gt;7.4 - Iterators with Complex State&lt;/li&gt;
  &lt;li&gt;7.5 - True Iterators&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;08 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/08%20-%20Compilation%2C%20Execution%2C%20and%20Errors.md&#34;&gt;Complete&lt;/a&gt; - Compilation, Execution, and Errors&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;8.1 - The require Function&lt;/li&gt;
  &lt;li&gt;8.2 - C Packages&lt;/li&gt;
  &lt;li&gt;8.3 - Errors&lt;/li&gt;
  &lt;li&gt;8.4 - Error Handling and Exceptions&lt;/li&gt;
  &lt;li&gt;8.5 - Error Messages and Tracebacks&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;09 - &lt;a href=&#34;https://github.com/htko89/lua-language/blob/master/Part%201%20-%20The%20Language/09%20-%20Coroutines.md&#34;&gt;Complete&lt;/a&gt; - Coroutines&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;9.1 - Coroutine Basics&lt;/li&gt;
  &lt;li&gt;9.2 - Pipes and Filters&lt;/li&gt;
  &lt;li&gt;9.3 - Coroutines as Iterators&lt;/li&gt;
  &lt;li&gt;9.4 - Non-Preemptive Multithreading&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;10 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Complete Examples&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;10.1 - Data Description&lt;/li&gt;
  &lt;li&gt;10.2 - Markov Chain Algorithm&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h3 id=&#34;part-2-tables-and-objects&#34;&gt;Part 2 - Tables and Objects&lt;/h3&gt;

&lt;p&gt;&lt;details&gt;&lt;summary&gt;11 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Data Structures&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;11.1 - Arrays&lt;/li&gt;
  &lt;li&gt;11.2 - Matrices and Multi-Dimensional Arrays&lt;/li&gt;
  &lt;li&gt;11.3 - Linked Lists&lt;/li&gt;
  &lt;li&gt;11.4 - Queues and Double Queues&lt;/li&gt;
  &lt;li&gt;11.5 - Sets and Bags&lt;/li&gt;
  &lt;li&gt;11.6 - String Buffers&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;12 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Data Files and Persistence&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;12.1 - Serialization&lt;/li&gt;
  &lt;li&gt;12.1.1 - Saving Tables without Cycles&lt;/li&gt;
  &lt;li&gt;12.1.2 - Saving Tables with Cycles&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;13 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Metatables and Metamethods&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;13.1 - Arithmetic Metamethods&lt;/li&gt;
  &lt;li&gt;13.2 - Relational Metamethods&lt;/li&gt;
  &lt;li&gt;13.3 - Library-Defined Metamethods&lt;/li&gt;
  &lt;li&gt;13.4 - Table-Access Metamethods&lt;/li&gt;
  &lt;li&gt;13.4.1 - The &lt;code&gt;__index&lt;/code&gt; Metamethod&lt;/li&gt;
  &lt;li&gt;13.4.2 - The &lt;code&gt;__newindex&lt;/code&gt; Metamethod&lt;/li&gt;
  &lt;li&gt;13.4.3 - Tables with Default Values&lt;/li&gt;
  &lt;li&gt;13.4.4 - Tracking Table Accesses&lt;/li&gt;
  &lt;li&gt;13.4.5 - Read-Only Tables&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;14 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The Environment&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;14.1 - Accessing Global Variables with Dynamic Names&lt;/li&gt;
  &lt;li&gt;14.2 - Declaring Global Variables&lt;/li&gt;
  &lt;li&gt;14.3 - Non-Global Environments&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;15 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Packages&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;15.1 - The Basic Approach&lt;/li&gt;
  &lt;li&gt;15.2 - Privacy&lt;/li&gt;
  &lt;li&gt;15.3 - Packages and Files&lt;/li&gt;
  &lt;li&gt;15.4 - Using the Global Table&lt;/li&gt;
  &lt;li&gt;15.5 - Other Facilities&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;16 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Object-Oriented Programming&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;16.1 - Classes&lt;/li&gt;
  &lt;li&gt;16.2 - Inheritance&lt;/li&gt;
  &lt;li&gt;16.3 - Multiple Inheritance&lt;/li&gt;
  &lt;li&gt;16.4 - Privacy&lt;/li&gt;
  &lt;li&gt;16.5 - The Single-Method Approach&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;17 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Weak Tables&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;17.1 - Memoize Functions&lt;/li&gt;
  &lt;li&gt;17.2 - Object Attributes&lt;/li&gt;
  &lt;li&gt;17.3 - Revisiting Tables with Default Values&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h3 id=&#34;part-3-the-standard-libraries&#34;&gt;Part 3 - The Standard Libraries&lt;/h3&gt;

&lt;p&gt;&lt;details&gt;&lt;summary&gt;18 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The Mathematical Library&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;18 - The Mathematical Library&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;19 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The Table Library&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;19.1 - Array Size&lt;/li&gt;
  &lt;li&gt;19.2 - Insert and Remove&lt;/li&gt;
  &lt;li&gt;19.3 - Sort&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;20 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The String Library&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;20.1 - Pattern-Matching Functions&lt;/li&gt;
  &lt;li&gt;20.2 - Patterns&lt;/li&gt;
  &lt;li&gt;20.3 - Captures&lt;/li&gt;
  &lt;li&gt;20.4 - Tricks of the Trade&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;21 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The I/O Library&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;21.1 - The Simple I/O Model&lt;/li&gt;
  &lt;li&gt;21.2 - The Complete I/O Model&lt;/li&gt;
  &lt;li&gt;21.2.1 - A Small Performance Trick&lt;/li&gt;
  &lt;li&gt;21.2.2 - Binary Files&lt;/li&gt;
  &lt;li&gt;21.3 - Other Operations on Files&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;22 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The Operating System Library&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;22.1 - Date and Time&lt;/li&gt;
  &lt;li&gt;22.2 - Other System Calls&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;23 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - The Debug Library&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;23.1 - Introspective Facilities&lt;/li&gt;
  &lt;li&gt;23.1.1 - Accessing Local Variables&lt;/li&gt;
  &lt;li&gt;23.1.2 - Accessing Upvalues&lt;/li&gt;
  &lt;li&gt;23.2 - Hooks&lt;/li&gt;
  &lt;li&gt;23.3 - Profiles&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h3 id=&#34;part-4-the-c-api&#34;&gt;Part 4 - The C API&lt;/h3&gt;

&lt;p&gt;&lt;details&gt;&lt;summary&gt;24 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - An Overview of the C API&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;24.1 - A First Example&lt;/li&gt;
  &lt;li&gt;24.2 - The Stack&lt;/li&gt;
  &lt;li&gt;24.2.1 - Pushing Elements&lt;/li&gt;
  &lt;li&gt;24.2.2 - Querying Elements&lt;/li&gt;
  &lt;li&gt;24.2.3 - Other Stack Operations&lt;/li&gt;
  &lt;li&gt;24.3 - Error Handling with the C API&lt;/li&gt;
  &lt;li&gt;24.3.1 - Error Handling in Application Code&lt;/li&gt;
  &lt;li&gt;24.3.2 - Error Handling in Library Code&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;25 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Extending your Application&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;25.1 - Table Manipulation&lt;/li&gt;
  &lt;li&gt;25.2 - Calling Lua Functions&lt;/li&gt;
  &lt;li&gt;25.3 - A Generic Call Function&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;26 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Calling C from Lua&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;26.1 - C Functions&lt;/li&gt;
  &lt;li&gt;26.2 - C Libraries&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;27 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Techniques for Writing C Functions&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;27.1 - Array Manipulation&lt;/li&gt;
  &lt;li&gt;27.2 - String Manipulation&lt;/li&gt;
  &lt;li&gt;27.3 - Storing State in C Functions&lt;/li&gt;
  &lt;li&gt;27.3.1 - The Registry&lt;/li&gt;
  &lt;li&gt;27.3.2 - References&lt;/li&gt;
  &lt;li&gt;27.3.3 - Upvalues&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;28 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - User-Defined Types in C&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;28.1 - Userdata&lt;/li&gt;
  &lt;li&gt;28.2 - Metatables&lt;/li&gt;
  &lt;li&gt;28.3 - Object-Oriented Access&lt;/li&gt;
  &lt;li&gt;28.4 - Array Access&lt;/li&gt;
  &lt;li&gt;28.5 - Light Userdata&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;29 - &lt;a href=&#34;#&#34;&gt;None&lt;/a&gt; - Managing Resources&lt;/summary&gt;
  &lt;ul&gt;
  &lt;li&gt;29.1 - A Directory Iterator&lt;/li&gt;
  &lt;li&gt;29.2 - An XML Parser&lt;/li&gt;
  &lt;/ul&gt;&lt;/details&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scripts Bash</title>
      <link>http://htko.ca/project/code/personal/scripts-bash/README/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/personal/scripts-bash/README/</guid>
      <description>

&lt;h1 id=&#34;personal-project&#34;&gt;Personal Project&lt;/h1&gt;

&lt;p&gt;A collection of &lt;a href=&#34;https://en.wikipedia.org/wiki/Bash_(Unix_shell)&#34;&gt;BASH&lt;/a&gt; scripts used to administrate local server.&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;These bash scripts are mostly designed to run in a Linux environment, specifically Docker 1.10+ running on Ubuntu 16.04.1.&lt;/li&gt;
&lt;li&gt;Extract &lt;a href=&#34;https://github.com/htko89/Linux-Scripts/releases&#34;&gt;latest version&lt;/a&gt; into a directory, say &lt;code&gt;~/Linux-Scripts&lt;/code&gt;, and enter it.
&lt;code&gt;
cd ~/Linux-Scripts
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set executable permissions:
&lt;code&gt;
chmod 755 -R ~/Linux-Scripts
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Linux-Scripts&lt;/code&gt; should contain &lt;code&gt;apps&lt;/code&gt;, &lt;code&gt;contents&lt;/code&gt; folders and a &lt;code&gt;launch.sh&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage-changelog&#34;&gt;Usage / Changelog&lt;/h2&gt;

&lt;h3 id=&#34;0-1&#34;&gt;0.1&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Usage:
&lt;code&gt;
Application Comments: [required] &amp;lt;optional&amp;gt;&amp;quot;
Usage   : ./cmd.sh [appType] [app] [profile] &amp;lt;commands..&amp;gt;&amp;quot;
Example : ./cmd.sh docker samba local&amp;quot;
SUDO access is required for docker file permissions.&amp;quot;
Available app types are:
docker, system
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example:
&lt;code&gt;
cd ~/Linux-Scripts
./launch.sh docker samba local
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Apps that have support files created in &lt;code&gt;contents&lt;/code&gt; folder. (such as a web server&amp;rsquo;s html files)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Scripts Legacy</title>
      <link>http://htko.ca/project/code/personal/scripts-legacy/README/</link>
      <pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/personal/scripts-legacy/README/</guid>
      <description>

&lt;h1 id=&#34;personal-project&#34;&gt;Personal Project&lt;/h1&gt;

&lt;p&gt;A collection of scripts for several esoteric languages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Twitch Channels Widget</title>
      <link>http://htko.ca/project/code/fcc/twitch-channels-widget/README/</link>
      <pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/twitch-channels-widget/README/</guid>
      <description>

&lt;h1 id=&#34;student-project-free-code-camp&#34;&gt;Student Project - Free Code Camp&lt;/h1&gt;

&lt;p&gt;Build an app that is functionally similar to this: &lt;a href=&#34;https://codepen.io/FreeCodeCamp/full/Myvqmo/&#34;&gt;https://codepen.io/FreeCodeCamp/full/Myvqmo/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User Story: I can see whether Free Code Camp is currently streaming on Twitch.tv.&lt;/li&gt;
&lt;li&gt;User Story: I can click the status output and be sent directly to the Free Code Camp&amp;rsquo;s Twitch.tv channel.&lt;/li&gt;
&lt;li&gt;User Story: if a Twitch user is currently streaming, I can see additional details about what they are streaming.&lt;/li&gt;
&lt;li&gt;User Story: I will see a placeholder notification if a streamer has closed their Twitch account (or the account never existed). You can verify this works by adding brunofin and comster404 to your array of Twitch streamers.&lt;/li&gt;
&lt;li&gt;UPDATE: Due to a change in conditions on API usage explained here Twitch.tv now requires an API key, but we&amp;rsquo;ve built a workaround. Use &lt;a href=&#34;https://wind-bow.hyperdev.space/twitch-api&#34;&gt;https://wind-bow.hyperdev.space/twitch-api&lt;/a&gt; instead of twitch&amp;rsquo;s API base URL (i.e. &lt;a href=&#34;https://api.twitch.tv/kraken&#34;&gt;https://api.twitch.tv/kraken&lt;/a&gt; ) and you&amp;rsquo;ll still be able to get account information, without needing to sign up for an API key.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Wikipedia Viewer Widget</title>
      <link>http://htko.ca/project/code/fcc/wikipedia-viewer-widget/README/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/wikipedia-viewer-widget/README/</guid>
      <description>

&lt;h1 id=&#34;student-project-free-code-camp&#34;&gt;Student Project - Free Code Camp&lt;/h1&gt;

&lt;p&gt;Build an app that is functionally similar to this: &lt;a href=&#34;https://codepen.io/FreeCodeCamp/full/wGqEga/&#34;&gt;https://codepen.io/FreeCodeCamp/full/wGqEga/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User Story: I can search Wikipedia entries in a search box and see the resulting Wikipedia entries.&lt;/li&gt;
&lt;li&gt;User Story: I can click a button to see a random Wikipedia entry.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Local Weather Widget</title>
      <link>http://htko.ca/project/code/fcc/local-weather-widget/README/</link>
      <pubDate>Wed, 03 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/local-weather-widget/README/</guid>
      <description>

&lt;h1 id=&#34;student-project-free-code-camp&#34;&gt;Student Project - Free Code Camp&lt;/h1&gt;

&lt;p&gt;Build an app that is functionally similar to this: &lt;a href=&#34;http://codepen.io/FreeCodeCamp/full/bELRjV/&#34;&gt;http://codepen.io/FreeCodeCamp/full/bELRjV/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User Story: I can see the weather in my current location.&lt;/li&gt;
&lt;li&gt;User Story: I can see a different icon or background image (e.g. snowy mountain, hot desert) depending on the weather.&lt;/li&gt;
&lt;li&gt;User Story: I can push a button to toggle between Fahrenheit and Celsius.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Quote Machine Widget</title>
      <link>http://htko.ca/project/code/fcc/quote-machine-widget/README/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/quote-machine-widget/README/</guid>
      <description>

&lt;h1 id=&#34;student-project-free-code-camp&#34;&gt;Student Project - Free Code Camp&lt;/h1&gt;

&lt;p&gt;Build an app that is functionally similar to this: &lt;a href=&#34;https://codepen.io/FreeCodeCamp/full/ONjoLe/&#34;&gt;https://codepen.io/FreeCodeCamp/full/ONjoLe/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User Story: I can click a button to show me a new random quote.&lt;/li&gt;
&lt;li&gt;User Story: I can press a button to tweet out a quote.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Portfolio Template</title>
      <link>http://htko.ca/project/code/fcc/portfolio-template/README/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/portfolio-template/README/</guid>
      <description>

&lt;h1 id=&#34;student-project-free-code-camp&#34;&gt;Student Project - Free Code Camp&lt;/h1&gt;

&lt;p&gt;Build an app that is functionally similar to this: &lt;a href=&#34;https://codepen.io/FreeCodeCamp/full/YqLyXB/&#34;&gt;https://codepen.io/FreeCodeCamp/full/YqLyXB/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User Story: I can access all of the portfolio webpage&amp;rsquo;s content just by scrolling.&lt;/li&gt;
&lt;li&gt;User Story: I can click different buttons that will take me to the portfolio creator&amp;rsquo;s different social media pages.&lt;/li&gt;
&lt;li&gt;User Story: I can see thumbnail images of different projects the portfolio creator has built (if you haven&amp;rsquo;t built any websites before, use placeholders.)&lt;/li&gt;
&lt;li&gt;User Story: I navigate to different sections of the webpage by clicking buttons in the navigation.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tribute Page</title>
      <link>http://htko.ca/project/code/fcc/tribute-page/README/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/fcc/tribute-page/README/</guid>
      <description>

&lt;h1 id=&#34;student-project-free-code-camp&#34;&gt;Student Project - Free Code Camp&lt;/h1&gt;

&lt;p&gt;Build an app that is functionally similar to this: &lt;a href=&#34;https://codepen.io/FreeCodeCamp/full/NNvBQW/&#34;&gt;https://codepen.io/FreeCodeCamp/full/NNvBQW/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User Story: I can view a tribute page with an image and text.&lt;/li&gt;
&lt;li&gt;User Story: I can click on a link that will take me to an external website with further information on the topic.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Angelfind App</title>
      <link>http://htko.ca/project/code/personal/angelfind-app/README/</link>
      <pubDate>Sat, 11 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://htko.ca/project/code/personal/angelfind-app/README/</guid>
      <description>

&lt;h1 id=&#34;hackathon-entry-angelhack&#34;&gt;Hackathon Entry - Angelhack&lt;/h1&gt;

&lt;p&gt;Event recommendation app based on user interest history.&lt;/p&gt;

&lt;h2 id=&#34;project-criteria&#34;&gt;Project Criteria:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Best use of remote API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;attribution&#34;&gt;Attribution:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/htko89&#34;&gt;Tony Ko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/raphaelz/&#34;&gt;Raphael Z&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>